# -*- coding: utf-8 -*-
import numpy as np
import matplotlib.pyplot as plt
"""Exercice1"""
#1
def f(x):
    return (x[0]-1)**2+10*(x[0]**2-x[1])**2
def g(x):
    return x[0]**2+2*x[1]**2+2*x[0]*x[1]
def df(x):
    x1=40*x[0]**3+2*x[0]*(1-20*x[1])-2
    x2=20*(x[1]-x[0]**2)
    return np.array([x1,x2])
def d2f(x):
    return np.array(([40*(30*x[0]**2-x[1]),-40*x[0]],[-40*x[0],20]))
def dg(x):
    x1=2*(x[0]+x[1])
    x2=2*(2*x[1]+x[0])
    return np.array([x1,x2])
def d2g(x):
    return np.array(([2,2],[2,4]))

x=np.array([1.,1.])
"""print(f(x))
print(df(x))
print(d2f(x))
print(g(x))
print(dg(x))
print(d2g(x))"""

#2
a,b=-1,2
X=np.linspace(a,b,500)
Y=np.linspace(a,b,500)
XX,YY=np.meshgrid(X,Y)
ZZ=f(np.array([XX,YY]))
plt.contour(XX,YY,ZZ,colors='grey')
plt.contour(XX,YY,ZZ,levels=np.logspace(-1,3.5,20,base=10), colors='grey')

#3
"""a,b=-1,1
X=np.linspace(a,b,500)
Y=np.linspace(a,b,500)
XX,YY=np.meshgrid(X,Y)
ZZ=g(np.array([XX,YY]))
plt.contour(XX,YY,ZZ,colors='blue')
plt.contour(XX,YY,ZZ,levels=np.logspace(-3,1,10,base=10), colors='blue')"""

"""Exercice 3"""
#1
def descente_fixe(f,x0,h,tol,df):
    x=x0
    X=np.array([x])
    n=0
    while np.linalg.norm(df(x))>=tol:
        n+=1
        x=x-h*df(x)
        X=np.append(X,[x],axis=0)
    return X,n

#2
#Fonction f
x1=[0,0]
h,tol=0.02,0.001

X=np.linspace(-1,2,500)
Y=np.linspace(-1,2,500)
XX,YY=np.meshgrid(X,Y)
ZZ=f(np.array([XX,YY]))
plt.contour(XX,YY,ZZ,levels=np.logspace(-1,3.5,20,base=10), colors='grey')
plt.xlabel('x')
plt.ylabel('y')

Xp,n=descente_fixe(f,x1,h,tol,df)
plt.plot(Xp[:,0],Xp[:,1],'-r')
plt.title(f"Descente à pas fixe: s={h} tol={tol}, {n} itérations")

#Fonction g
x1=[1,1]
h,tol=0.02,0.001

X=np.linspace(-1,1,500)
Y=np.linspace(-1,1,500)
XX,YY=np.meshgrid(X,Y)
ZZ=g(np.array([XX,YY]))
plt.contour(XX,YY,ZZ,levels=np.logspace(-3,1,10,base=10), colors='grey')
plt.xlabel('x')
plt.ylabel('y')

Xp,n=descente_fixe(g,x1,h,tol,dg)
print(Xp)
plt.plot(Xp[:,0],Xp[:,1],'-r')
plt.title(f"Descente à pas fixe: s={h} tol={tol}, {n} itérations")
